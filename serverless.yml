service: service-cnj-api

frameworkVersion: '4.3.2'

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
          Resource: arn:aws:dynamodb:us-east-1:${aws:accountId}:table/MyCNJTable
        - Effect: Allow
          Action:
            - sqs:SendMessage
          Resource: arn:aws:sqs:us-east-1:${aws:accountId}:MyCNJQueue

functions:
  processCNJ:
    handler: index.handler
    events:
      - sqs:
          arn: arn:aws:sqs:us-east-1:${aws:accountId}:MyCNJQueue

resources:
  Resources:
    MyCNJTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: MyCNJTable
        AttributeDefinitions:
          - AttributeName: cnjNumber
            AttributeType: S
        KeySchema:
          - AttributeName: cnjNumber
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    MyCNJQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: MyCNJQueue

    # Role para permitir ao API Gateway enviar mensagens à fila SQS
    ApiGatewaySqsRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service: apigateway.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: ApiGatewaySqsPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action: sqs:SendMessage
                  Resource: arn:aws:sqs:us-east-1:${aws:accountId}:MyCNJQueue

    ApiGatewayRestApi:
      Type: AWS::ApiGateway::RestApi
      Properties: 
        Name: "cnj-api"
        EndpointConfiguration:
          Types:
            - REGIONAL  # Define o tipo de endpoint como Regional

    ApiGatewayResource:
      Type: AWS::ApiGateway::Resource
      Properties: 
        ParentId: 
          Fn::GetAtt: 
            - ApiGatewayRestApi
            - RootResourceId
        PathPart: "send-cnj"
        RestApiId: 
          Ref: ApiGatewayRestApi

    ApiGatewayMethod:
      Type: AWS::ApiGateway::Method
      Properties: 
        AuthorizationType: "NONE"
        HttpMethod: POST
        ResourceId: 
          Ref: ApiGatewayResource
        RestApiId: 
          Ref: ApiGatewayRestApi
        RequestParameters:
          method.request.header.Content-Type: true  # Exige o cabeçalho Content-Type
        Integration:
          IntegrationHttpMethod: POST
          Type: AWS
          Credentials: !GetAtt ApiGatewaySqsRole.Arn  # Associa a Role criada ao API Gateway
          Uri:
            Fn::Sub: arn:aws:apigateway:${AWS::Region}:sqs:action/SendMessage&QueueUrl=https://sqs.${AWS::Region}.amazonaws.com/${aws:accountId}/MyCNJQueue
          RequestParameters:
            integration.request.header.Content-Type: "'application/x-www-form-urlencoded'"
          RequestTemplates:
            application/json: |
              Action=SendMessage&MessageBody=$input.body
          IntegrationResponses:
            - StatusCode: 200
        MethodResponses:
          - StatusCode: 200

    ApiGatewayDeployment:
      Type: AWS::ApiGateway::Deployment
      Properties:
        RestApiId: 
          Ref: ApiGatewayRestApi
        StageName: dev
      DependsOn:
        - ApiGatewayMethod
